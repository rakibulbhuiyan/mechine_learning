print('Hello world')
x=2
print(x)
print(x)
cls
reticulate::repl_python()
import numpy as np
import pandas as pd
print(X)
#also using dataframe...use notebook jupyter
'''imputer = SimpleImputer(missing_values=np.NaN, strategy='mean')
X[:,1:3]=imputer.transform(X[:,1:3])
reticulate::py_install("numpy")
reticulate::py_install("pandas")
reticulate::py_install("numpy")
View(r)
print(X)
import numpy as np
import pandas as pd
import matplotlib as plt
from sklearn.impute import SimpleImputer
dataset=pd.read_csv('Data/Data.csv')
X=dataset.iloc[:,:-1].values# its indicate [row,column]....[:,:-1]
y=dataset.iloc[:,-1].values
print("____________________X Axes______________")
print(X)
print("____________________Y Axes_______________")
print(y)
# now taking care of missing data...
imputer = SimpleImputer(missing_values=np.NaN, strategy='mean')
imputer.fit(X[:,1:3])
X[:,1:3]=imputer.transform(X[:,1:3])
print(X)
reticulate::repl_python()
y=dataset.iloc[:,-1].values
print(x)
import numpy as np
import pandas as pd
import matplotlib as plt
from sklearn.impute import SimpleImputer
reticulate::repl_python()
install.packages('numpy')
install.packages('caTools')
install.packages("caTools")
install.packages("caTools")
view(dataset)
setwd("F:/git/Mechine_learning")
demo()
reticulate::repl_python()
library(carTools)
View(r)
View(r)
from sklearn.model_selection import StratifiedShuffleSplit,train_test_split
purchased_data = dataset['Purchased']
train_data, test_data = train_test_split(purchased_data, test_size=0.2, random_state=42)
# Filter the training set for purchases (True values) using boolean indexing
training_set = dataset[dataset['Purchased'] == True]
test_set = dataset[dataset['Purchased'] == False]
import numpy as np
import pandas as pd
import matplotlib as plt
from sklearn.impute import SimpleImputer
dataset=pd.read_csv('Data/Data.csv')
print(dataset)
View(r)
View(r)
import numpy as np
import pandas as pd
import matplotlib as plt
from sklearn.impute import SimpleImputer
dataset=pd.read_csv('Data/Data.csv')
from sklearn.impute import SimpleImputer
